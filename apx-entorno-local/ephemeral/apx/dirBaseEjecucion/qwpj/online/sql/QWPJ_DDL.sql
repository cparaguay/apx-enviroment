set mode Oracle;

CREATE SCHEMA IF NOT EXISTS QWPJ;

CREATE SEQUENCE IF NOT EXISTS QWPJ.BATCH_JOB_EXECUTION_SEQ START WITH 1 CACHE 20	;

CREATE SEQUENCE IF NOT EXISTS QWPJ.BATCH_JOB_SEQ START WITH 1 CACHE 20			;

CREATE SEQUENCE IF NOT EXISTS QWPJ.BATCH_PARAM_COUNT_SEQ START WITH 1 CACHE 20	;

CREATE SEQUENCE IF NOT EXISTS QWPJ.BATCH_STEP_EXECUTION_SEQ START WITH 1 CACHE 20	;

CREATE SEQUENCE IF NOT EXISTS QWPJ.QQWJBAC1
START WITH 601
  
  START WITH 1
  
  CACHE 20
  ;


CREATE TABLE IF NOT EXISTS QWPJ.BATCH_JOB 
(
  JOB_NAME VARCHAR2(100) NOT NULL 
, CONSTRAINT PK_BATCH_JOB PRIMARY KEY (JOB_NAME )
) 
;

CREATE TABLE IF NOT EXISTS QWPJ.BATCH_JOB_EXECUTION 
(
  JOB_EXECUTION_ID NUMBER(19, 0) NOT NULL 
, VERSION NUMBER(19, 0) 
, JOB_INSTANCE_ID NUMBER(19, 0) NOT NULL 
, CREATE_TIME TIMESTAMP(6) NOT NULL 
, START_TIME TIMESTAMP(6) DEFAULT NULL 
, END_TIME TIMESTAMP(6) DEFAULT NULL 
, STATUS VARCHAR2(10) 
, EXIT_CODE VARCHAR2(100) 
, EXIT_MESSAGE VARCHAR2(2500) 
, LAST_UPDATED TIMESTAMP(6) 
, CONSTRAINT PK_BATCH_JOB_EXECUTION PRIMARY KEY (JOB_EXECUTION_ID )
)
;

CREATE TABLE IF NOT EXISTS QWPJ.BATCH_JOB_EXECUTION_CONTEXT 
(
  JOB_EXECUTION_ID NUMBER(19, 0) NOT NULL 
, SHORT_CONTEXT VARCHAR2(2500) NOT NULL 
, SERIALIZED_CONTEXT CLOB 
, CONSTRAINT PK_BATCH_JOB_EXECUTION_CONTEXT PRIMARY KEY (JOB_EXECUTION_ID )
) 
;

CREATE TABLE IF NOT EXISTS QWPJ.BATCH_JOB_INSTANCE 
(
  JOB_INSTANCE_ID NUMBER(19, 0) NOT NULL 
, VERSION NUMBER(19, 0) 
, JOB_NAME VARCHAR2(100) NOT NULL 
, JOB_KEY VARCHAR2(32) NOT NULL 
, CONSTRAINT PK_BATCH_JOB_INSTANCE PRIMARY KEY   (    JOB_INSTANCE_ID   )
) 
;

CREATE TABLE IF NOT EXISTS QWPJ.BATCH_JOB_PARAMS 
(
  JOB_INSTANCE_ID NUMBER(19, 0) NOT NULL 
, TYPE_CD VARCHAR2(6) NOT NULL 
, KEY_NAME VARCHAR2(100) NOT NULL 
, STRING_VAL VARCHAR2(250) 
, DATE_VAL TIMESTAMP(6) DEFAULT NULL 
, LONG_VAL NUMBER(19, 0) 
, DOUBLE_VAL NUMBER 
) 
;

CREATE TABLE IF NOT EXISTS QWPJ.BATCH_STEP_EXECUTION 
(
  STEP_EXECUTION_ID NUMBER(19, 0) NOT NULL 
, VERSION NUMBER(19, 0) NOT NULL 
, STEP_NAME VARCHAR2(100) NOT NULL 
, JOB_EXECUTION_ID NUMBER(19, 0) NOT NULL 
, START_TIME TIMESTAMP(6) NOT NULL 
, END_TIME TIMESTAMP(6) DEFAULT NULL 
, STATUS VARCHAR2(10) 
, COMMIT_COUNT NUMBER(19, 0) 
, READ_COUNT NUMBER(19, 0) 
, FILTER_COUNT NUMBER(19, 0) 
, WRITE_COUNT NUMBER(19, 0) 
, READ_SKIP_COUNT NUMBER(19, 0) 
, WRITE_SKIP_COUNT NUMBER(19, 0) 
, PROCESS_SKIP_COUNT NUMBER(19, 0) 
, ROLLBACK_COUNT NUMBER(19, 0) 
, EXIT_CODE VARCHAR2(100) 
, EXIT_MESSAGE VARCHAR2(2500) 
, LAST_UPDATED TIMESTAMP(6) 
, CONSTRAINT PK_BATCH_STEP_EXECUTION PRIMARY KEY   (    STEP_EXECUTION_ID   )
) 
;

CREATE TABLE IF NOT EXISTS QWPJ.BATCH_STEP_EXECUTION_CONTEXT 
(
  STEP_EXECUTION_ID NUMBER(19, 0) NOT NULL 
, SHORT_CONTEXT VARCHAR2(2500) NOT NULL 
, SERIALIZED_CONTEXT CLOB 
, CONSTRAINT PK_BATCH_STEP_EXECUTION_CONTEX PRIMARY KEY   (    STEP_EXECUTION_ID   )
) 
;

ALTER TABLE QWPJ.BATCH_JOB_EXECUTION_CONTEXT ADD CONSTRAINT IF NOT EXISTS JOB_EXEC_CTX_FK FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES QWPJ.BATCH_JOB_EXECUTION (JOB_EXECUTION_ID);

ALTER TABLE QWPJ.BATCH_JOB_EXECUTION_CONTEXT
ADD CONSTRAINT IF NOT EXISTS JOB_EXEC_CTX_FK FOREIGN KEY( JOB_EXECUTION_ID )
REFERENCES QWPJ.BATCH_JOB_EXECUTION(  JOB_EXECUTION_ID )
;

ALTER TABLE QWPJ.BATCH_JOB_EXECUTION
ADD CONSTRAINT IF NOT EXISTS JOB_INST_EXEC_FK FOREIGN KEY (JOB_INSTANCE_ID)
REFERENCES QWPJ.BATCH_JOB_INSTANCE (JOB_INSTANCE_ID )
;

ALTER TABLE QWPJ.BATCH_JOB_PARAMS
ADD CONSTRAINT IF NOT EXISTS JOB_INST_PARAMS_FK FOREIGN KEY(  JOB_INSTANCE_ID )
REFERENCES QWPJ.BATCH_JOB_INSTANCE(  JOB_INSTANCE_ID )
;

ALTER TABLE QWPJ.BATCH_STEP_EXECUTION
ADD CONSTRAINT IF NOT EXISTS JOB_EXEC_STEP_FK FOREIGN KEY(  JOB_EXECUTION_ID )
REFERENCES QWPJ.BATCH_JOB_EXECUTION(  JOB_EXECUTION_ID )
;

ALTER TABLE QWPJ.BATCH_STEP_EXECUTION_CONTEXT
ADD CONSTRAINT IF NOT EXISTS STEP_EXEC_CTX_FK FOREIGN KEY(  STEP_EXECUTION_ID )
REFERENCES QWPJ.BATCH_STEP_EXECUTION(  STEP_EXECUTION_ID )
;

alter table QWPJ.BATCH_JOB_INSTANCE
    add constraint IF NOT EXISTS JOB_INST_UN unique (JOB_NAME, JOB_KEY);
   
alter table QWPJ.BATCH_JOB_EXECUTION
   ALTER COLUMN EXIT_CODE VARCHAR2(2500);
alter table QWPJ.BATCH_JOB_EXECUTION
   add IF NOT EXISTS JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL;
   
alter table QWPJ.BATCH_STEP_EXECUTION
    ALTER COLUMN EXIT_CODE VARCHAR2(2500);

CREATE TABLE IF NOT EXISTS QWPJ.BATCH_JOB_EXECUTION_PARAMS  (
    JOB_EXECUTION_ID NUMBER(19,0) NOT NULL ,
    TYPE_CD VARCHAR2(6) NOT NULL ,
    KEY_NAME VARCHAR2(100) NOT NULL ,
    STRING_VAL VARCHAR2(250) ,
    DATE_VAL TIMESTAMP DEFAULT NULL ,
    LONG_VAL NUMBER(19,0) ,
    DOUBLE_VAL NUMBER ,
    IDENTIFYING CHAR(1) NOT NULL ,
    constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
    references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;




/*==============================================================*/
/* ESQUEMA PARA QWXJ                                            */
/* DBMS name:      ORACLE Version 10gR2                         */
/* Created on:     14/07/2014 9:43:30                           */
/*==============================================================*/

CREATE SCHEMA IF NOT EXISTS QWXJ;

create sequence IF NOT EXISTS QWXJ.QQWXJERR0
start with 0
increment by 1
cache 20
;

create sequence IF NOT EXISTS QWXJ.QQWXJMES0
start with 0
increment by 1
cache 20
;

/*==============================================================*/
/* Table: TQWXJERR                                              */
/*==============================================================*/
create table IF NOT EXISTS QWXJ.TQWXJERR  (
   COD_BATCHERR         NUMBER(4)                       not null,
   COD_JOB_ID           VARCHAR2(20)                    not null,
   DES_STEPERR          VARCHAR2(80),
   DES_ERROREJE         VARCHAR2(80)                    not null,
   constraint CQWXJERR primary key (COD_BATCHERR)
);

/*==============================================================*/
/* Table: TQWXJMES                                              */
/*==============================================================*/
create table IF NOT EXISTS QWXJ.TQWXJMES  (
   COD_BATCHMES         NUMBER(4)                       not null,
   COD_JOB_ID           VARCHAR2(20)                    not null,
   DES_STEPMES          VARCHAR2(80),
   DES_MESSAGE          VARCHAR2(254)                   not null,
   constraint CQWXJMES primary key (COD_BATCHMES)
);



commit;
